; Setup KeySets to define a namespace
(env-data {
  "namespace-keyset": {
    "keys": [],
    "pred": "keys-all"
  },
  "test-keyset": {
    "keys": [],
    "pred": "keys-all"
  }
})

; Setup namespace
(begin-tx)
(define-namespace "free" (read-keyset "test-keyset") (read-keyset "namespace-keyset"))
(commit-tx)

(env-data {
 "stake-for-steak-keyset": {
   "keys": [
     "stake-for-steak-public-key"
   ],
   "pred": "keys-all"
 }
})

(env-sigs [{
  "key": "stake-for-steak-public-key",
  "caps": []
}])

(begin-tx)
(load "stake-for-steak.pact")
(commit-tx)

(env-data { "stake-owner-keyset": { "keys": [ "stake-owner-public-key" ], "pred": "keys-all" } })

; Test creation of a stake
(env-keys ["stake-owner-public-key"])
(begin-tx)
(free.stake-for-steak.create-stake "tulsi-stake" "tulsi-account" "stake-owner" (read-keyset "stake-owner-keyset") 50.0)
(expect 
  "Stake to be created"
  (free.stake-for-steak.get-stake "tulsi-stake")
  { "name"     : "tulsi-stake"
  , "merchant" : "tulsi-account"
  , "owner"    : "stake-owner"
  , "stake"    : 50.0
  , "balance"  : 0.0 })
(commit-tx)
(env-data {})
(env-sigs [])
